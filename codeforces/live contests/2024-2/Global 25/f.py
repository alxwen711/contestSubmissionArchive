import sys

#input functions
readint = lambda: int(sys.stdin.readline())
readints = lambda: map(int,sys.stdin.readline().split())
readar = lambda: list(map(int,sys.stdin.readline().split()))
flush = lambda: sys.stdout.flush()
"""
p = 2,3,1
q = 3,2,1
q*p = 2,1,3

brute force all cases up to n = 4 and pattern check?
limit of k is n*n-n
inversion count in p must have same parity as k
q = p or q = p.reverse() => inv(p)

in n = 4 case, values possible given inv(p) = ?
0 -> 0,2,4,6,8,10,12
1 -> 1,3,5,7,9,11
2 -> 2,4,6,8,10
3 -> 3,5,7,9
4 -> 4,6,8
5 -> 5,7
6 -> 6

n = 2
[(1, 2), (2, 1)]
(1, 2) (1, 2) [1, 2] 0 0 0
(1, 2) (2, 1) [2, 1] 1 1 2
(2, 1) (1, 2) [2, 1] 0 1 1
(2, 1) (2, 1) [1, 2] 1 0 1

n = 3
[(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]

(1, 2, 3) (1, 2, 3) [1, 2, 3] 0 0 0
(1, 2, 3) (1, 3, 2) [1, 3, 2] 1 1 2
(1, 2, 3) (2, 1, 3) [2, 1, 3] 1 1 2
(1, 2, 3) (2, 3, 1) [2, 3, 1] 2 2 4
(1, 2, 3) (3, 1, 2) [3, 1, 2] 2 2 4
(1, 2, 3) (3, 2, 1) [3, 2, 1] 3 3 6

(1, 3, 2) (1, 2, 3) [1, 3, 2] 0 1 1
(1, 3, 2) (1, 3, 2) [1, 2, 3] 1 0 1
(1, 3, 2) (2, 1, 3) [2, 3, 1] 1 2 3
(1, 3, 2) (2, 3, 1) [2, 1, 3] 2 1 3
(1, 3, 2) (3, 1, 2) [3, 2, 1] 2 3 5
(1, 3, 2) (3, 2, 1) [3, 1, 2] 3 2 5

(2, 1, 3) (1, 2, 3) [2, 1, 3] 0 1 1
(2, 1, 3) (1, 3, 2) [3, 1, 2] 1 2 3
(2, 1, 3) (2, 1, 3) [1, 2, 3] 1 0 1
(2, 1, 3) (2, 3, 1) [3, 2, 1] 2 3 5
(2, 1, 3) (3, 1, 2) [1, 3, 2] 2 1 3
(2, 1, 3) (3, 2, 1) [2, 3, 1] 3 2 5

(2, 3, 1) (1, 2, 3) [2, 3, 1] 0 2 2
(2, 3, 1) (1, 3, 2) [3, 2, 1] 1 3 4
(2, 3, 1) (2, 1, 3) [1, 3, 2] 1 1 2
(2, 3, 1) (2, 3, 1) [3, 1, 2] 2 2 4
(2, 3, 1) (3, 1, 2) [1, 2, 3] 2 0 2
(2, 3, 1) (3, 2, 1) [2, 1, 3] 3 1 4

(3, 1, 2) (1, 2, 3) [3, 1, 2] 0 2 2
(3, 1, 2) (1, 3, 2) [2, 1, 3] 1 1 2
(3, 1, 2) (2, 1, 3) [3, 2, 1] 1 3 4
(3, 1, 2) (2, 3, 1) [1, 2, 3] 2 0 2
(3, 1, 2) (3, 1, 2) [2, 3, 1] 2 2 4
(3, 1, 2) (3, 2, 1) [1, 3, 2] 3 1 4

(3, 2, 1) (1, 2, 3) [3, 2, 1] 0 3 3
(3, 2, 1) (1, 3, 2) [2, 3, 1] 1 2 3
(3, 2, 1) (2, 1, 3) [3, 1, 2] 1 2 3
(3, 2, 1) (2, 3, 1) [1, 3, 2] 2 1 3
(3, 2, 1) (3, 1, 2) [2, 1, 3] 2 1 3
(3, 2, 1) (3, 2, 1) [1, 2, 3] 3 0 3
"""

for _ in range(readint()):
    n,k = readints()
    ar = readar()
