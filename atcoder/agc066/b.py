import sys

#input functions
readint = lambda: int(sys.stdin.readline())
readints = lambda: map(int,sys.stdin.readline().split())
readar = lambda: list(map(int,sys.stdin.readline().split()))
flush = lambda: sys.stdout.flush()

"""
find sequence where doubling reduces digit sum
if n = 50 solution can be found, then n = 1 is given
cannot rely entirely on increasing digit count
100 -> 50 -> 25 -> 125 -> 625 -> 3125
maybe this is brute force?

[1000000000000000000000000000000000000000000000000000000000000100000000207896,
500000000000000000000000000000000000000000000000000000000000050000000103948,
250000000000000000000000000000000000000000000000000000000000025000000051974,
125000000000000000000000000000000000000000000000000000000000012500000025987,
625000000000000000000000000000000000000000000000000000000000062500000129935,
3125000000000000000000000000000000000000000000000000000000000312500000649675,
15625000000000000000000000000000000000000000000000000000000001562500003248375,
78125000000000000000000000000000000000000000000000000000000007812500016241875,
390625000000000000000000000000000000000000000000000000000000039062500081209375,
1953125000000000000000000000000000000000000000000000000000000195312500406046875,
9765625000000000000000000000000000000000000000000000000000000976562502030234375,
48828125000000000000000000000000000000000000000000000000000004882812510151171875,
244140625000000000000000000000000000000000000000000000000000024414062550755859375,
1220703125000000000000000000000000000000000000000000000000000122070312753779296875,
6103515625000000000000000000000000000000000000000000000000000610351563768896484375,
30517578125000000000000000000000000000000000000000000000000003051757818844482421875,
152587890625000000000000000000000000000000000000000000000000015258789094222412109375,
762939453125000000000000000000000000000000000000000000000000076293945471112060546875,
3814697265625000000000000000000000000000000000000000000000000381469727355560302734375,
19073486328125000000000000000000000000000000000000000000000001907348636777801513671875,
95367431640625000000000000000000000000000000000000000000000009536743183889007568359375,
476837158203125000000000000000000000000000000000000000000000047683715919445037841796875,
2384185791015625000000000000000000000000000000000000000000000238418579597225189208984375,
11920928955078125000000000000000000000000000000000000000000001192092897986125946044921875,
59604644775390625000000000000000000000000000000000000000000005960464489930629730224609375]

best solution: 40
355000000000000000000000000000544000000000000000000000000000941000000000000000000000000000595

best solution: 44
85000000000000000000000000000052000000000000000000000000000037000000000000000000000000000004000000000000000000000000000027000000000000000000000000000002000000000000000000000000000001000000000000000000000000000050

best solution: 46

"""
from random import randint
def ds(x):
    a = 0
    while x != 0:
        a += x % 10
        x //= 10
    return a

def trial(x):
    v = x
    ar = [v]
    prev = ds(ar[-1])
    for i in range(50):
        if v % 2 == 1: v *= 10
        v //= 2
        np = ds(v)
        if np > prev:
            prev = np
            ar.append(v)
        else: break
    return ar

best = 0
count = 30
while True:
    """
    i = randint(1,100)
    j = randint(0,100)
    k = randint(0,100)
    l = randint(0,100)
    m = randint(0,100)
    n = randint(0,100)
    o = randint(0,100)
    p = randint(0,100)
    
    x = i*10**210+j*10**180+k*10**150+l*10**120+m*10**90+n*10**60+o*10**30+p
    """
    x = randint(1,100)
    for ii in range(count):
        x *= (10**35)
        x += randint(0,100)
    ar = trial(x)
    if len(ar) > best:
        best = len(ar)
        print(best,"found solution using",x)
        #print(best)
        #print(x % 10000000000000)
        #if best >= 25:
        #    print(ar)
            #break # found solution
    if best == 51:
        print("base solution is",x)
        break
